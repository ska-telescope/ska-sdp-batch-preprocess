variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEBIAN_FRONTEND: "noninteractive"
  CASACORE_VERSION: v3.6.0
  AOFLAGGER_VERSION: b1256de90b00a5a83477274390decd6671cdcd38 
  IDG_VERSION: 9ce6fa88b9d746d8d7146c474992aba9b98eb41f 
  EVERYBEAM_VERSION: 0578473cacf64c69bc2e05e15754cf94dd1051b9 
  DP3_VERSION: v6.2.1

stages:
  - lint
  - scan
  - build
  - test
  - publish
  - pages

include:
  - project: "ska-telescope/templates-repository"
    file: 
     - "gitlab-ci/includes/python.gitlab-ci.yml"
     - "gitlab-ci/includes/docs.gitlab-ci.yml"
     - "gitlab-ci/includes/finaliser.gitlab-ci.yml"
     - "gitlab-ci/includes/release.gitlab-ci.yml"

python-test:
  image: saliei/dp3:1.0.0
  before_script:
    - DP3 --version
    - '[ -f .make/python.mk ] || (echo "File python.mk not included in Makefile; exit 1")'
    - 'make help | grep python-test'
    - poetry config virtualenvs.in-project true
    - echo "python-build Setting.. poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE"
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - |
      if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
        echo "python-test: Updating poetry to $CI_POETRY_VERSION";
        pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
      fi;
      echo "python-test: Installing with poetry";
      time poetry install --all-extras;
