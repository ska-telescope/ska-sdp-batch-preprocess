variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEBIAN_FRONTEND: "noninteractive"

stages:
  - lint
  - scan
  - build
  - test
  - publish
  - pages

include:
  - project: "ska-telescope/templates-repository"
    file: 
     - "gitlab-ci/includes/python.gitlab-ci.yml"
     - "gitlab-ci/includes/docs.gitlab-ci.yml"
     - "gitlab-ci/includes/finaliser.gitlab-ci.yml"
     - "gitlab-ci/includes/release.gitlab-ci.yml"

python-test:
  image: saliei/dp3:1.2.0
  before_script:
    - '[ -f .make/python.mk ] || (echo "File python.mk not included in Makefile; exit 1")'
    - 'make help | grep python-test'
    - poetry config virtualenvs.in-project true
    - | 
      echo "python-build Setting.. poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE"
      poetry config virtualenvs.create true
    - |
      if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
        echo "python-test: Updating poetry to $CI_POETRY_VERSION";
        pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
      fi;
    - | 
      echo "python-test: Installing with poetry";
      poetry install --all-extras;
    - |
      echo "poetry: Activating virtualenv";
      eval `poetry env activate`

