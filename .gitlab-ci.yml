variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEBIAN_FRONTEND: "noninteractive"
  DOCKER_IMAGE_NAME: "$CI_REGISTRY_IMAGE:latest"
  DOCKER_CACHE_IMAGE: "$CI_REGISTRY_IMAGE:cache"
  CONTAINER_SCANNING_DISABLED: true

stages:
  - lint
  - scan
  - build
  - test
  - publish
  - pages

include:
  - project: "ska-telescope/templates-repository"
    file: 
     - "gitlab-ci/includes/python.gitlab-ci.yml"
     - "gitlab-ci/includes/docs.gitlab-ci.yml"
     - "gitlab-ci/includes/finaliser.gitlab-ci.yml"
     - "gitlab-ci/includes/release.gitlab-ci.yml"

.poetry-before-script: &poetry-before-script
  - '[ -f .make/python.mk ] || (echo "File python.mk not included in Makefile; exit 1")'
  - 'make help | grep python-test'
  - | 
    echo "configuring poetry venv and sourcing it"
    poetry config virtualenvs.in-project true
    poetry config virtualenvs.create true
    poetry env use python3
    source $(poetry env info --path)/bin/activate
  - |
    if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
      echo "python-test: Updating poetry to $CI_POETRY_VERSION";
      pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
    fi;
    echo "python-test: Installing with poetry";
    time poetry install --all-extras;

build-docker:
  stage: build
  image: docker:latest
  services:
    - docker:dind  # docker-in-docker service
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
  script:
    - docker pull "$DOCKER_CACHE_IMAGE" || true  # pull cache if available
    - docker build --pull --cache-from "$DOCKER_CACHE_IMAGE" --build-arg BUILDKIT_INLINE_CACHE=1 -t "$DOCKER_IMAGE_NAME" .
    - docker tag  "$DOCKER_IMAGE_NAME" "$DOCKER_CACHE_IMAGE"
    - docker push "$DOCKER_IMAGE_NAME"
    - docker push "$DOCKER_CACHE_IMAGE"
  rules:
    - changes:
      - Dockerfile
      - pyproject.toml
      - poetry.lock
      - src/**

python-lint:
  before_script:
    - *poetry-before-script

docs-build:
  before_script:
    - *poetry-before-script

python-test:
  image: "$CI_REGISTRY_IMAGE:latest"
  before_script:
    - ln -s /usr/bin/python3 /usr/bin/python
    - *poetry-before-script
