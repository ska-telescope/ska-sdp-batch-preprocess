variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEBIAN_FRONTEND: "noninteractive"
  CONTAINER_SCANNING_DISABLED: true

stages:
  - lint
  - scan
  - build
  - test
  - publish
  - pages

include:
  - project: "ska-telescope/templates-repository"
    file:
      - "gitlab-ci/includes/python.gitlab-ci.yml"
      - "gitlab-ci/includes/docs.gitlab-ci.yml"
      - "gitlab-ci/includes/finaliser.gitlab-ci.yml"
      - "gitlab-ci/includes/release.gitlab-ci.yml"

version-docker:
  stage: build
  script:
    - git fetch --unshallow
    - COMMIT_SHAS=($(git log -n 2 --pretty=format:%H -- Dockerfile))
    - echo LATEST_SHA = ${COMMIT_SHAS[0]} > versions.env
    - echo BUILDCACHE_SHA = ${COMMIT_SHAS[1]} >> versions.env
    - echo LATEST_IMAGE = $CI_REGISTRY_IMAGE:${COMMIT_SHAS[0]} >> versions.env
    - cat versions.env

  artifacts:
    reports:
      dotenv: versions.env

build-docker:
  stage: build
  needs:
    - job: version-docker
      artifacts: true
  image: docker:latest
  services:
    - docker:dind # docker-in-docker service
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - |
      if ! docker manifest inspect $LATEST_IMAGE > /dev/null; then
        docker build --build-arg BUILDKIT_INLINE_CACHE=1 --tag $LATEST_IMAGE .
        docker push $LATEST_IMAGE
      fi

python-test:
  needs:
    - job: version-docker
      artifacts: true
    - job: build-docker
  image: $LATEST_IMAGE
