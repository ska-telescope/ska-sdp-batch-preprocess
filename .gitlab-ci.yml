variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DEBIAN_FRONTEND: "noninteractive"

stages:
  - lint
  - scan
  - build
  - test
  - publish
  - pages

# Include CI templates
include:
  - project: "ska-telescope/templates-repository"
    file: 
     - "gitlab-ci/includes/python.gitlab-ci.yml"
     - "gitlab-ci/includes/docs.gitlab-ci.yml"
     - "gitlab-ci/includes/finaliser.gitlab-ci.yml"
     - "gitlab-ci/includes/release.gitlab-ci.yml"

python-lint:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: lint
  tags:
    - ${SKA_DEFAULT_RUNNER}
  before_script:
    - '[ -f .make/python.mk ] || (echo "File python.mk not included in Makefile"; exit 1;)'
    - 'make help | grep python-lint'
    - poetry config virtualenvs.in-project false
    - echo "python-build Setting.. poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE"
    - poetry config virtualenvs.create $POETRY_CONFIG_VIRTUALENVS_CREATE
    - |
      if [[ -f pyproject.toml ]]; then
      if [[ -n $CI_POETRY_VERSION ]] && [[ $(poetry --version) != *$CI_POETRY_VERSION* ]]; then
      echo "python-lint: Updating poetry to $CI_POETRY_VERSION";
      pipx uninstall poetry && pipx install poetry==$CI_POETRY_VERSION;
      fi;

      echo "python-lint: Installing with poetry";
      time poetry install --all-extras;
      else
      if  [[ -f requirements.txt ]]; then
      echo "python-lint: Installing with pip";
      time pip3 install -r requirements.txt;
      fi;
      fi;

